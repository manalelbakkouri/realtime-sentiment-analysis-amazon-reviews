version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "reviews:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  sentiment-api:
    build: 
      context: .
      dockerfile: dockerfile
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - KAFKA_TOPIC=reviews
      - KAFKA_CONSUMER_GROUP=sentiment-consumer
    depends_on:
      - kafka
    command: python scripts/app.py

  backend:
    build: 
      context: .
      dockerfile: dockerfile
    environment:
      PYSPARK_PYTHON: python
      PYSPARK_DRIVER_PYTHON: python
      PYTHONPATH: Backend

  sentiment-consumer:
    build: 
      context: .
      dockerfile: dockerfile
    volumes:
      - .:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - KAFKA_TOPIC=reviews
      - KAFKA_CONSUMER_GROUP=sentiment-consumer
    depends_on:
      - kafka
    command: python scripts/kafka_consumer.py
